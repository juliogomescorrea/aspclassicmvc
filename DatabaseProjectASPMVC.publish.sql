/*
Deployment script for ProjectsManager

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ProjectsManager"
:setvar DefaultFilePrefix "ProjectsManager"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL11.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL11.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE Latin1_General_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[SIS_acessos]...';


GO
CREATE TABLE [dbo].[SIS_acessos] (
    [id_acesso]           INT           IDENTITY (1, 1) NOT NULL,
    [acesso]              VARCHAR (250) NOT NULL,
    [descricao]           VARCHAR (250) NOT NULL,
    [situacao]            VARCHAR (1)   NOT NULL,
    [data_insercao]       DATETIME      NOT NULL,
    [id_usuario_insercao] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([id_acesso] ASC),
    UNIQUE NONCLUSTERED ([acesso] ASC)
);


GO
PRINT N'Creating [dbo].[SIS_acessos_referencias]...';


GO
CREATE TABLE [dbo].[SIS_acessos_referencias] (
    [id_acesso]     INT NOT NULL,
    [id_referencia] INT NOT NULL
);


GO
PRINT N'Creating [dbo].[SIS_logs]...';


GO
CREATE TABLE [dbo].[SIS_logs] (
    [id_log]        INT           IDENTITY (1, 1) NOT NULL,
    [sql]           VARCHAR (MAX) NULL,
    [resultado]     VARCHAR (MAX) NULL,
    [data_insercao] DATETIME      NULL,
    [id_usuario]    INT           NULL,
    CONSTRAINT [PK_SIS_logs] PRIMARY KEY CLUSTERED ([id_log] ASC)
);


GO
PRINT N'Creating [dbo].[SIS_menus]...';


GO
CREATE TABLE [dbo].[SIS_menus] (
    [id_menu]             INT           IDENTITY (1, 1) NOT NULL,
    [menu]                VARCHAR (250) NULL,
    [link]                VARCHAR (250) NULL,
    [situacao]            VARCHAR (1)   NULL,
    [data_insercao]       DATETIME      NULL,
    [id_usuario_insercao] INT           NULL,
    CONSTRAINT [PK_SIS_menus] PRIMARY KEY CLUSTERED ([id_menu] ASC)
);


GO
PRINT N'Creating [dbo].[SIS_perfis]...';


GO
CREATE TABLE [dbo].[SIS_perfis] (
    [id_perfil]           INT           IDENTITY (1, 1) NOT NULL,
    [perfil]              VARCHAR (250) NOT NULL,
    [situacao]            VARCHAR (1)   NOT NULL,
    [data_insercao]       DATETIME      NOT NULL,
    [id_usuario_insercao] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([id_perfil] ASC),
    UNIQUE NONCLUSTERED ([perfil] ASC)
);


GO
PRINT N'Creating [dbo].[SIS_perfis_acessos]...';


GO
CREATE TABLE [dbo].[SIS_perfis_acessos] (
    [id_perfil] INT NOT NULL,
    [id_acesso] INT NOT NULL
);


GO
PRINT N'Creating [dbo].[SIS_produtos]...';


GO
CREATE TABLE [dbo].[SIS_produtos] (
    [id_produto] INT           IDENTITY (1, 1) NOT NULL,
    [nome]       VARCHAR (250) NULL,
    CONSTRAINT [PK_SIS_produtos] PRIMARY KEY CLUSTERED ([id_produto] ASC)
);


GO
PRINT N'Creating [dbo].[SIS_referencias]...';


GO
CREATE TABLE [dbo].[SIS_referencias] (
    [id_referencia]       INT           IDENTITY (1, 1) NOT NULL,
    [referencia]          VARCHAR (250) NOT NULL,
    [descricao]           VARCHAR (250) NULL,
    [situacao]            VARCHAR (1)   NOT NULL,
    [data_insercao]       DATETIME      NULL,
    [id_usuario_insercao] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([id_referencia] ASC),
    UNIQUE NONCLUSTERED ([referencia] ASC)
);


GO
PRINT N'Creating [dbo].[SIS_usuarios]...';


GO
CREATE TABLE [dbo].[SIS_usuarios] (
    [id_usuario]          INT            IDENTITY (1, 1) NOT NULL,
    [nome]                NVARCHAR (MAX) NOT NULL,
    [email]               NVARCHAR (250) NOT NULL,
    [senha]               VARCHAR (50)   NOT NULL,
    [situacao]            VARCHAR (1)    NOT NULL,
    [data_insercao]       DATETIME       NOT NULL,
    [id_usuario_insercao] INT            NOT NULL,
    [id_perfil]           INT            NOT NULL,
    CONSTRAINT [PK__SIS_usua__4E3E04AD8D3FD9C5] PRIMARY KEY CLUSTERED ([id_usuario] ASC)
);


GO
PRINT N'Creating [dbo].[usuarios]...';


GO
CREATE TABLE [dbo].[usuarios] (
    [id_usuario]          INT            IDENTITY (1, 1) NOT NULL,
    [nome]                NVARCHAR (MAX) NOT NULL,
    [email]               NVARCHAR (250) NOT NULL,
    [senha]               VARCHAR (50)   NOT NULL,
    [situacao]            VARCHAR (1)    NOT NULL,
    [data_insercao]       DATETIME       NOT NULL,
    [id_usuario_insercao] INT            NOT NULL,
    [id_perfil]           INT            NOT NULL
);


GO
PRINT N'Creating Default Constraint on [dbo].[SIS_acessos]....';


GO
ALTER TABLE [dbo].[SIS_acessos]
    ADD DEFAULT ('A') FOR [situacao];


GO
PRINT N'Creating Default Constraint on [dbo].[SIS_acessos]....';


GO
ALTER TABLE [dbo].[SIS_acessos]
    ADD DEFAULT (getdate()) FOR [data_insercao];


GO
PRINT N'Creating DF_SIS_logs_data_insercao...';


GO
ALTER TABLE [dbo].[SIS_logs]
    ADD CONSTRAINT [DF_SIS_logs_data_insercao] DEFAULT (getdate()) FOR [data_insercao];


GO
PRINT N'Creating DF_SIS_menus_data_insercao...';


GO
ALTER TABLE [dbo].[SIS_menus]
    ADD CONSTRAINT [DF_SIS_menus_data_insercao] DEFAULT (getdate()) FOR [data_insercao];


GO
PRINT N'Creating Default Constraint on [dbo].[SIS_perfis]....';


GO
ALTER TABLE [dbo].[SIS_perfis]
    ADD DEFAULT ('A') FOR [situacao];


GO
PRINT N'Creating Default Constraint on [dbo].[SIS_perfis]....';


GO
ALTER TABLE [dbo].[SIS_perfis]
    ADD DEFAULT (getdate()) FOR [data_insercao];


GO
PRINT N'Creating Default Constraint on [dbo].[SIS_referencias]....';


GO
ALTER TABLE [dbo].[SIS_referencias]
    ADD DEFAULT ('A') FOR [situacao];


GO
PRINT N'Creating Default Constraint on [dbo].[SIS_referencias]....';


GO
ALTER TABLE [dbo].[SIS_referencias]
    ADD DEFAULT (getdate()) FOR [data_insercao];


GO
PRINT N'Creating DF__SIS_usuar__situa__20C1E124...';


GO
ALTER TABLE [dbo].[SIS_usuarios]
    ADD CONSTRAINT [DF__SIS_usuar__situa__20C1E124] DEFAULT ('A') FOR [situacao];


GO
PRINT N'Creating DF__SIS_usuar__data___21B6055D...';


GO
ALTER TABLE [dbo].[SIS_usuarios]
    ADD CONSTRAINT [DF__SIS_usuar__data___21B6055D] DEFAULT (getdate()) FOR [data_insercao];


GO
PRINT N'Creating [dbo].[VW_usuarios]...';


GO
CREATE VIEW VW_usuarios
AS
SELECT 
	usu.id_usuario AS CodUsuario,
	usu.nome AS Nome,
	usu.email AS Email,
	usu.senha AS Senha,
	CASE WHEN usu.situacao = 'A' THEN 'Ativo' ELSE 'Inativo' END AS Situacao,
	CONVERT(VARCHAR(10), usu.data_insercao, 103) AS Cadastro,
	usuS.nome AS Supervisor,
	per.perfil AS Perfil
FROM 
	SIS_usuarios usu
	INNER JOIN SIS_perfis per
		ON usu.id_perfil = per.id_perfil
	INNER JOIN SIS_usuarios usuS
		ON usu.id_usuario_insercao = usuS.id_usuario
GO
PRINT N'Creating [dbo].[VW_usuarios_permissoes]...';


GO

-- VIEWS
CREATE VIEW VW_usuarios_permissoes AS 
	SELECT 
		usuarios.id_usuario, 
		usuarios.nome,
		perfis.id_perfil, 
		perfis.perfil, 
		acessos.id_acesso, 
		acessos.acesso, 
		referencias.id_referencia, 
		referencias.referencia
	FROM 
		SIS_usuarios usuarios 
		INNER JOIN SIS_perfis perfis
			ON usuarios.id_perfil = perfis.id_perfil
		INNER JOIN SIS_perfis_acessos perfis_acessos
			ON perfis.id_perfil = perfis_acessos.id_perfil
		INNER JOIN SIS_acessos acessos
			ON perfis_acessos.id_acesso = acessos.id_acesso
		INNER JOIN SIS_acessos_referencias acessos_referencias
			ON acessos.id_acesso = acessos_referencias.id_acesso
		INNER JOIN SIS_referencias referencias
			ON acessos_referencias.id_referencia = referencias.id_referencia
	WHERE
		usuarios.situacao = 'A'
		AND perfis.situacao = 'A'
		AND acessos.situacao = 'A'
		AND referencias.situacao = 'A'
GO
PRINT N'Creating [dbo].[TRG_VW_usuarios]...';


GO
CREATE TRIGGER TRG_VW_usuarios ON VW_usuarios
INSTEAD OF INSERT
AS
BEGIN
    INSERT INTO SIS_usuarios (Nome, Email, Senha, id_perfil, id_usuario_insercao)
    SELECT Nome,Email,Senha, Perfil, Supervisor
    FROM INSERTED
END
GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
